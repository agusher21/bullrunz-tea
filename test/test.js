// Generated by CoffeeScript 1.10.0
(function() {
  var brown, data, json, str;

  brown = require('../index.coffee');

  console.log(brown.render("hello {{foo}}", {
    foo: "world"
  }));

  brown.micromustache.encode = function(key) {
    var html;
    html = this[key] || '';
    return String(html).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  };

  data = {
    href: "/",
    label: "my \"label\""
  };

  str = {
    'a href="{{href}}" onclick="{{encode:label}}"': "{{label}}"
  };

  console.log(brown.render(str, data));

  json = {
    ul: {
      li: {
        'a href="{{href}}" onclick="{{encode:label}}"': "{{label}}"
      }
    }
  };

  console.log(JSON.stringify(json, null, 2));

  console.log(brown.render(json, {
    href: "/",
    label: "my \"label\""
  }));

  brown.micromustache.zen = require('../node_modules/zen-coding');

  json = {
    div: {
      '{{zen:span>b.foo}}': '{{foo}}',
      '{{zen:span>b.bar}}': '{{func}}',
      '{{zen:div#foo.flop>fieldset>div>span}}': "{{foo}}"
    }
  };

  data = {
    foo: "hello world",
    func: function() {
      return this.foo + " foobar";
    }
  };

  console.log(JSON.stringify(json, null, 2));

  console.log(brown.render(json, data));

}).call(this);
